version: 2

jobs:
  #########################
  # BUILD
  #########################
  build:
    working_directory: ~/repo
    docker:
      - image: circleci/openjdk:8-jdk
        environment:
          MAVEN_CLI_OPTS: --threads 1C --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true -s .circleci/mavenSettings.xml
          MAVEN_OPTS: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true

    steps:
      - checkout
      - restore_cache:
          key: example-security-proxy-request-mapper-{{ checksum "pom.xml" }}
      - run:
          name: Collect and save dependencies
          command: mvn $MAVEN_CLI_OPTS dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: example-security-proxy-request-mapper-{{ checksum "pom.xml" }}
      - run:
          name: Build and run unit tests
          command: mvn $MAVEN_CLI_OPTS package

  #########################
  # DOCKERS
  #########################
  deploy-docker-snapshot:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          key: example-security-proxy-request-mapper-{{ checksum "pom.xml" }}
      - run:
          name: Build snapshot docker artifacts
          command: mvn $MAVEN_CLI_OPTS docker:build -Psnapshot -U
      - run:
          name: Deploy snapshot docker artifacts
          command: mvn $MAVEN_CLI_OPTS docker:push -Psnapshot -U

  deploy-docker-release:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          key: example-security-proxy-request-mapper-{{ checksum "pom.xml" }}
      - run:
          name: Build release docker artifacts
          command: mvn $MAVEN_CLI_OPTS docker:build -Prelease -U
      - run:
          name: Deploy release docker artifacts
          command: mvn $MAVEN_CLI_OPTS docker:push -Prelease -U

  #########################
  # ARTIFACTS
  #########################
  deploy-artifacts:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          key: example-security-proxy-request-mapper-{{ checksum "pom.xml" }}
      - run:
          name: Deploy artifacts
          command: mvn $MAVEN_CLI_OPTS deploy -DskipTests -U

#########################
# WORKFLOWS
#########################
workflows:
  version: 2
  security-proxy-request-mapper-workflow:
    jobs:
      - build:
          context: dev-context
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - deploy-docker-snapshot:
          context: dev-context
          filters:
            branches:
              only:
                - master
          requires:
            - build
      - deploy-docker-release:
          context: dev-context
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
          requires:
            - build
      - deploy-artifacts:
          context: dev-context
          filters:
            tags:
              only: /.*/
            branches:
              only:
                - master
          requires:
            - build