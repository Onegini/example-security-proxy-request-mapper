version: 2.1

restore_cache: &restore_m2_cache
  keys:
    - v1-example-security-proxy-request-mapper-{{ checksum "pom.xml" }}
    - v1-example-security-proxy-request-mapper-

save_cache: &save_m2_cache
      key: v1-example-security-proxy-request-mapper-{{ checksum "pom.xml" }}
      paths:
        - ~/.m2

executors:
  maven-builder:
    docker:
      - image: circleci/openjdk:8u232
        environment:
          MAVEN_OPTS: " -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true -Xms256M -Xmx512M -Xss2M -XX:MaxMetaspaceSize=512M"
          MAVEN_CLI_OPTS: " -s .circleci/mavenSettings.xml --threads 1C --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
          JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
    working_directory: ~/repo

jobs:
  build:
    executor: maven-builder
    steps:
      - checkout
      - restore_cache: *restore_m2_cache
      - run:
          name: Collect and save dependencies
          command: mvn $MAVEN_CLI_OPTS dependency:go-offline
      - run:
          name: Build and run unit tests
          command: mvn $MAVEN_CLI_OPTS package
      - save_cache: *save_m2_cache

  deploy-docker-snapshot:
    executor: maven-builder
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: ~/
      - restore_cache: *restore_m2_cache
      - run:
          name: Build snapshot docker artifacts
          command: mvn $MAVEN_CLI_OPTS docker:build -Psnapshot -U
      - run:
          name: Deploy snapshot docker artifacts
          command: mvn $MAVEN_CLI_OPTS docker:push -Psnapshot -U

  deploy-docker-release:
    executor: maven-builder
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: ~/
      - restore_cache: *restore_m2_cache
      - run:
          name: Build release docker artifacts
          command: mvn $MAVEN_CLI_OPTS docker:build -Prelease -U
      - run:
          name: Deploy release docker artifacts
          command: mvn $MAVEN_CLI_OPTS docker:push -Prelease -U

workflows:
  version: 2
  security-proxy-request-mapper-workflow:
    jobs:
      - build:
          context: dev-context
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - deploy-docker-snapshot:
          context: dev-context
          filters:
            branches:
              only:
                - master
          requires:
            - build
      - deploy-docker-release:
          context: dev-context
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
          requires:
            - build
